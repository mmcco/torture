.\"
.\" Copyright (c) 2005 Marco Peereboom <marco@peereboom.us>
.\" Copyright (c) 2010 Thordur I. Bjornsson <thib@openbsd.org> 
.\" Copyright (c) 2013 Bob Beck <beck@obtuse.com>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd July 23 2010 
.Dt TORTURE 8
.Os
.Sh NAME
.Nm torture 
.Nd torture suite 
.Sh SYNOPSIS
.Nm torture
.Ar command
.Op Ar options ...
.Sh DESCRIPTION
.Nm
is a suite of torture programs, each designed to torture specific parts
of the kernel, some even multiple parts.
.Pp
The following commands are available:
.Bl -tag -width Ds
.It Xo
.Cm swap
.Op Ar options
.Xc
Run the swap torture program.
.Pp
The options are as follows:
.Bl -tag -width Ds
.It Fl n Ar num
.Ar num
is the number of process to fork, default is 4.
.It Fl s Ar size
Each process will allocate
.Ar size
megabytes, default is 512.
.It Fl w Ar num
Each process will sleep for
.Ar num
seconds before exiting, default is 300.
.El
.\" IOGEN
.It Xo
.Cm iogen
.Op Ar options
.Xc
Run the iogen torture program.
.Pp
The optios are as follows:
.Bl -tag -width Ds
.It Fl b Ar max-io-size
This is the fixed I/O size unless the -r flag is set.
The default is 64KB.
.It Fl d Ar target-directory
This is the directory where the I/O file will be written to.
The default is the current working directory.
.It Fl f Ar result-directory
This is the directory where the result file will be written to.
The result file is updated every
.Ar update-time
seconds with statistics.
The default is the current working directory.
.It Fl k
Kill all running
.Nm
processes.
.It Fl n Ar nr-forks
This will determine how many identical processes will be forked to run I/O.
The default is 1.
.It Fl p Ar read-percentage
This determins the read vs write distribution.
The range is from 10% to 90%.
The default is 50.
.It Fl P Ar pattern
Pattern is a whole number that designates the IO pattern.  The default is a
text pattern that is human readable.  Use ? to print out the available
patterns.
.It Fl r
Randomize I/O size between 1 and
.Ar max-io-size .
Enabling this flag will disable data verification.
The default is disabled.
.It Fl s Ar max-file-size
The file where the I/O is run to and from will grow sequentially until it is
bigger or equal to this value.
At that point all write I/O will also become random.
The default is 1GB.
.It Fl t Ar update-time
This determines the minimal amount of time between updates.
Under heavy I/O this value can be skewed due to
the asynchronous nature of
.Xr alarm 3 .
The default is 60 seconds.
.It Fl T Ar I/O timeout
This determines the maximum time an I/O run is allowed to take to complete.
If the timeout is reached all iogen processes will be terminated.
The default is disabled.
.El
.Pp
Although the algorithm for I/O generation is incredibly simple,
it has proven to be very effective at
bringing out issues in storage stacks.
It first grows the initial file a minimal amount to be able to start running
I/O in it.
After the initial growth,
it reads randomly within the current file size.
Every run is a distribution between reads and writes which is governed by
the read percentage value.
The file is grown sequentially until it reaches maximum file size.
Whenever this happens a message is logged to syslogd(8) and all writes become
random.
.Pp
To monitor progress one can
.Xr tail 1
the result file which is updated every
.Ar update-time
interval or send the process a
.Dv HUP
signal.
Whenever an I/O process receives a
.Dv HUP
signal, it prints statistical values to
.Xr stderr 4
at its earliest convenience.
.Pp
Whenever iogen runs into data corruption or a failed read or write it will
terminate all child processes.
.\" FILBUF
.It Xo
.Cm filbuf
.Op Ar options
.Xc
Run the filbuf torture program.
.Pp
The options are as follows:
.Bl -tag -width Ds
.It Fl d Ar directory
Data files get written into
.Ar directory.
By default a new directory, filbuf is created  in the current directory.
.It Fl s Ar size
.Ar size
of the files in megabytes to be written. By default 64Mb.
.It Fl n Ar num
The
.Ar num
of processes to create. By default 8.
.It Fl f Ar num
The
.Ar num
of files each process will create. By default 64.
.El
.\" COREDUMPER
.It Xo
.Cm coredumper size nproc dir
.Xc
Run the coredumper torture program. The coredumper will make many processes dump core files in parallel into a specified directory. 
.Pp
The arguments must be specified as follows:
.Bl -tag -width Ds
.It Ar size
.Ar size
of the processes in megabytes that will dump core. 
.It Ar num
The
.Ar num
of processes to create
.It Ar dir
Specify 
.Ar dir
as the directory where coredumper will dump its core files. This directory
must exist beforehand. 
.El
.El
.Sh HISTORY
The first version of
.Nm
suite was written in 2010. It however contains programs that are as old
as the grey beards.
.Sh AUTHORS
.An Thordur I. Bjornsson Aq thib@openbsd.org
.An Bob Beck Aq beck@obtuse.com
.Pp
This suite includes a re-write of the filbuf program by Matthew Jacob.
And iogen written by the top posting flametroll also known as
.An Marco Peereboom Aq marco@peereboom.us .
.Sh CAVEATS
This suite is capable of generating extremely high load on your system,
not to mention your I/O sub systems, parts of it have been known to
break hardware before, so please use caution an don't complain if something
bad happens.
